<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.SecurityProperties.User"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="org.springframework.data.redis.core.RedisTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.data.redis.core.HashOperations"/>
    <fullyQualifiedTypeName name="in.Ashokit.dao.UserDao"/>
    <fullyQualifiedTypeName name="in.Ashokit.bindings.User"/>
    <fullyQualifiedTypeName name="springfox.documentation.swagger2.annotations.EnableSwagger2"/>
    <fullyQualifiedTypeName name="springfox.documentation.spring.web.plugins.Docket"/>
    <fullyQualifiedTypeName name="springfox.documentation.spi.DocumentationType"/>
    <fullyQualifiedTypeName name="springfox.documentation.builders.RequestHandlerSelectors"/>
    <fullyQualifiedTypeName name="springfox.documentation.builders.PathSelectors"/>
    <fullyQualifiedTypeName name="springfox.documentation.service.ApiInfo"/>
    <fullyQualifiedTypeName name="io.swagger.models.Contact"/>
    <fullyQualifiedTypeName name="springfox.documentation.service.Contact"/>
    <fullyQualifiedTypeName name="in.Ashokit.service.CustomerService"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListeners"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.ProducerFactory"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.StringSerializer"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.producer.ProducerConfig"/>
    <fullyQualifiedTypeName name="org.apache.kafka.connect.json.JsonSerializer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.DefaultKafkaProducerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.KafkaTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.EnableKafka"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.ConsumerFactory"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.consumer.ConsumerConfig"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.DefaultKafkaConsumerFactory"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.StringDeserializer"/>
    <fullyQualifiedTypeName name="org.apache.kafka.connect.json.JsonDeserializer"/>
    <fullyQualifiedTypeName name="javax.xml.bind.annotation.XmlRootElement"/>
    <fullyQualifiedTypeName name="javax.xml.bind.annotation.XmlAccessorType"/>
    <fullyQualifiedTypeName name="javax.xml.bind.annotation.XmlAccessType"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="in.Ashokit.bindings.Customer"/>
    <fullyQualifiedTypeName name="in.Ashokit.util.KafkaConstants"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="java.util.Random"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="reactor.core.publisher.Mono"/>
    <fullyQualifiedTypeName name="java.util.stream.Stream"/>
    <fullyQualifiedTypeName name="java.time.Duration"/>
    <fullyQualifiedTypeName name="reactor.core.publisher.Flux"/>
    <fullyQualifiedTypeName name="reactor.util.function.Tuple2"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="in.Ashokit.bindings.CustomerEvent"/>
    <fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
</qualifiedTypeNameHistroy>
